<?xml version="1.0"?>
<!--

    Copyright 2006-2012 smartics, Kronseder & Reiner GmbH

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<faqs title="Frequently Asked Questions">
  <part id="general">
    <title>General</title>

    <faq id="aim">
      <question>
        What does this project aim at?
      </question>
      <answer>
        <p>
        This project's aim is to provide all kind of build meta data to a
        <a href="http://maven.apache.org/">Maven</a> project.
        This information can be included in the generated artifacts for further reference.
        The plugin provides <a href="build-properties.html">basic meta data</a>
        without any configuration burden for its users.
        If some information is not provided by default, users are free to add
        <a href="provider.html">provider</a> implementations without the need to
        write a Maven plugin by themselves.
        </p>
      </answer>
    </faq>
    <faq id="free">
      <question>
        Is this free software?
      </question>
      <answer>
        Yes. For details please refer to <a href="license.html">the license of this project</a>.
        Note that this project depends on libraries that have different licenses. Have a look
        at the <a href="dependencies.html#Licenses">Dependencies' Licenses</a> for details.
      </answer>
    </faq>
    <faq id="similar">
      <question>
        What are similar projects?
      </question>
      <answer>
        The <a href="http://mojo.codehaus.org/buildnumber-maven-plugin/">buildnumber-maven-plugin</a>
        provides a build number, too. While the buildmetadata-maven-plugin aims to make it easy to
        include any meta data within the generated artifact, the buildnumber-maven-plugin focuses on
        handling build numbers. If the way the buildmetadata-maven-plugin deals with build numbers
        does not meet your needs, we recommend to have a look at the buildnumber-maven-plugin.
      </answer>
    </faq>
  </part>

  <part id="user">
    <title>User FAQ</title>

    <faq id="noBuildNumber">
      <question>
        I'm looking for a unique build number generated to identify the artifact
        created. Is a build number part of the meta data generated by this plugin?
      </question>
      <answer>
        <p>
          No, we do not generate a consecutive build number. The problem is that
          this number has to be stored somewhere. In previous versions of this
          plugin this number was stored in the POM and then has to be given to
          the SCM. But changing the POM by each build seems somewhat odd. This
          information is relevant to the artifact created, but not to the
          source.
        </p>
        <p>
          If you are looking for a unique number identifying the artifact, have
          a look at the revision number and/or the timestamp. The revision
          number ties the artifact to a state of your code base, while the
          timestamp uniquely identifies the time (in milliseconds) the artifact
          has been built.
        </p>
        <p>
          If you still require this sequential number, please have a look
          at the <a href="provider.html">Provider SPI</a>. There you'll
          learn how to integrate your own implementation of a meta data provider.
        </p>
      </answer>
    </faq>

    <faq id="svnNumber">
      <question>
        The plugin fetched an SVN revision that is not part of the project's
        history. For instance, the reported SVN revision is 11102, but the
        history in my IDE only shows 11101 and 11103. What is wrong?
      </question>
      <answer>
        <p>
          Probably nothing is wrong. The revision 11102 is the revision of the
          tag and may not be shown in the history of the trunk. If you list
          all revisions you will get something like the following list:
        </p>
        <source>
11103	21.03.12 23:33	1	robert.reiner	[maven-release-plugin] prepare for next development iteration
11102	21.03.12 23:33	1	robert.reiner	[maven-release-plugin]  copy for tag bugzilla-maven-plugin-0.4.1
11101	21.03.12 23:33	1	robert.reiner	[maven-release-plugin] prepare release bugzilla-maven-plugin-0.4.1
        </source>
        <p>
          The revision number, the plugin receives from SVN, is that of the tag.
        </p>
      </answer>
    </faq>


    <faq id="supportedScmProviders">
      <question>
        What SCM providers are supported?
      </question>
      <answer>
        <p>
          Currently only the SVN provider has been tested. The implementation
          uses the mechanisms implemented by the
          <a href="http://maven.apache.org/plugins/maven-changelog-plugin/">maven-changelog-plugin</a>.
          It is expected that the revision returned by the SCM on the latest file
          change is a revision number suitable to fetch the whole project.
        </p>
      </answer>
    </faq>
  </part>

  <part id="trouble-shooting">
    <title>Trouble Shooting</title>

    <faq id="noLabelInReport">
      <question>
        I added a <code>properties</code> element and the properties show
        up in the <code>build.properties</code>. But the report does not
        show the correct label. Instead the name of the property is shown.
      </question>
      <answer>
        <p>
          Probably you have configured the properties in the plugin section,
          but it should be done in the report plugin section. This way one
          configuration is used for both mojos.
        </p>
      </answer>
    </faq>
  </part>
</faqs>
